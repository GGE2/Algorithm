import java.util.*;
import java.io.*;


public class Main
{
    static int N,count;
    static int[][] map;
    static boolean[][] v;
    static int[] dx={-1,0,1,0};
    static int[] dy={0,1,0,-1};

    public static void main(String args[]) throws Exception
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        N = Integer.parseInt(br.readLine());

        map = new int[N][N];
        v = new boolean[N][N];
        ArrayList<Integer> list = new ArrayList<>();
        for(int i=0;i<N;i++){
            String str = br.readLine();
            for(int j=0;j<N;j++)
                map[i][j] = str.charAt(j)-'0';
        }
        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                if(map[i][j]==1&&!v[i][j]){
                    count = 0;
                    dfs(i,j);
                    list.add(count);
                }
            }
        }
        Collections.sort(list);
        System.out.println(list.size());
        for(int k : list) System.out.println(k);
        
    }
    static void dfs(int x,int y){
        v[x][y] = true;
        count++;
        for(int i=0;i<4;i++){
            int nx = x+dx[i];
            int ny = y+dy[i];

            if(nx>=0&&ny>=0&&nx<N&&ny<N&&map[nx][ny]==1&&!v[nx][ny]){
                dfs(nx,ny);
            }
        }
    }

}
