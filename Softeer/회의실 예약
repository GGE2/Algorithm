import java.util.*;
import java.io.*;


public class Main
{
    static class Room{

        String name;
        int count;
        boolean[] info;
        StringBuilder sb;


        public Room(String name,int count,boolean[] info,StringBuilder sb){
            this.name = name;
            this.count = count;
            this.info = info;
            this.sb = sb;
        }
    }

    public static void main(String args[]) throws Exception
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());

        Room[] rooms = new Room[N];

        for(int i=0;i<N;i++){
            String name = br.readLine();
            rooms[i] = new Room(name,0,new boolean[10],new StringBuilder());
        }

        for(int i=0;i<M;i++){
            st = new StringTokenizer(br.readLine());
            String name = st.nextToken();
            int start = Integer.parseInt(st.nextToken())-9;
            int end = Integer.parseInt(st.nextToken())-9;
            
            for(int j=0;j<N;j++){
                if(rooms[j].name.equals(name)){
                    for(int k=start;k<end;k++){
                        rooms[j].info[k] = true;
                    }
                    break;
                }
            }
        }
        for(int i=0;i<N;i++){
            int count = 0;
            for(int j=0;j<10;j++){
                if(!rooms[i].info[j]&&j!=9){
                    int start = j;
                    while(j<10&&!rooms[i].info[j]){
                        j++;
                    }
                    int end = j;
                    if(end+9>18)
                        end = 9;
                    count++;
                    if(start==0){ //9ì‹œ ->09
                        rooms[i].sb.append("0").append(start+9).append("-").append(end+9).append("\n");
                    }
                    else{
                        rooms[i].sb.append(start+9).append("-").append(end+9).append("\n");
                    }
                }
            }
            rooms[i].count = count;
        }
        Arrays.sort(rooms,(o1,o2)->{
            return o1.name.compareTo(o2.name);
        });
        for(int i=0;i<N;i++){
            System.out.println("Room "+rooms[i].name+":");
            if(rooms[i].count==0){
                System.out.println("Not available");
            }else{
                System.out.println(rooms[i].count+" available:");
                System.out.print(rooms[i].sb);
            }
            if(i!=N-1)
                    System.out.println("-----");
        }
        
    }
}
