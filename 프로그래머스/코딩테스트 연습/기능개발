import java.util.*;
import java.io.*;

class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
        Queue<Integer> task = new ArrayDeque<>();
        for(int i=0;i<progresses.length;i++){
            int po = (100-progresses[i])%speeds[i];
            if(po==0)
                task.add((100-progresses[i])/speeds[i]);
            else
                task.add((100-progresses[i])/speeds[i]+1);
            
        }
        ArrayList<Integer> list = new ArrayList<>();
        while(!task.isEmpty()){
            int top = task.poll();
            int count=1;
            while(!task.isEmpty()){
                if(task.peek()<=top){
                    task.poll();
                    count++;
                }
                else
                    break;
            }
            list.add(count);
        }
        int[] answer = new int[list.size()];
        for(int i=0;i<list.size();i++)
            answer[i] = list.get(i);
        return answer;
    }
}
