import java.util.*;
import java.io.*;

class Solution {
    static class Process{
        int idx;
        int pri;
        public Process(int idx,int pri){
            this.idx = idx;
            this.pri = pri;
        }
        
        
    }
    public int solution(int[] priorities, int location) {
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        Queue<Process> q = new ArrayDeque<>();
        int answer = 1;
        int[] pt = priorities;
        for(int i=0;i<pt.length;i++){
            pq.add(pt[i]);
            q.add(new Process(i,pt[i]));
        }
        while(!q.isEmpty()){
            Process now = q.poll();
            if(now.pri==pq.peek()){
                if(now.idx==location)
                    break;
                else{
                    pq.poll();
                    answer++;        
                }
            }
            q.add(new Process(now.idx,now.pri));
            
            
        }
        
        
        
        return answer;
    }
}
