import java.io.*;
import java.util.*;

class Solution {
    
    static boolean[] visited;
    static int answer;
    public int solution(String begin, String target, String[] words) {
        answer = Integer.MAX_VALUE;
        visited = new boolean[words.length];
        for(int i=0;i<words.length;i++){
            if(target.equals(words[i])){
                break;
            }
            if(i==words.length-1&&!target.equals(words[i]))
                return 0;
        }
        dfs(begin,target,words,-1,0);
        if(answer==Integer.MAX_VALUE) answer = 0;
        
        return answer;
    }
    static void dfs(String begin,String target,String[] words,int index,int count){
        for(int i=0;i<words.length;i++){
            if(i!=index&&isChangeable(begin,words[i])&&!visited[i]){
                if(words[i].equals(target)){
                    answer = Math.min(answer,count+1);
                    return ;
                }
                visited[i] = true;
                dfs(words[i],target,words,i,count+1);
                visited[i] = false;
                
            }
        }
        
        return ;
    }
    
    static boolean isChangeable(String str1,String str2){
        int cnt = 0;
        for(int i=0;i<str1.length();i++){
            if(str1.charAt(i)!=str2.charAt(i))
                cnt++;
            if(cnt>1) break;
        }
        //변환 가능한 조건
        if(cnt<=1){
            return true;
        }
        //변환 불가
        else{
            return false;
        }
        
    }
    
    
    
    
}
